'''
    문제설명
        백준 6236 용돈 관리 (이분 탐색 이용)
        N일 동안 M번만 통장에서 돈을 빼려고 할 때 매일 사용해야하는 금액을 위해 필요한 인출 최소 금액 K를 계산한다.
    해결전략
        인출 최소 금액을 기준으로 이분 탐색을 진행한다. 탐색의 시작점을 정하는데 유의해야 한다.
        인출해서 최소 하루는 사용해야하기 때문에 인출 금액의 최솟값은 하루 필요 금액의 최댓값이다.
        최댓값은 인출해서 모든 날의 필요금액을 모두 커버할 수 있을 때이므로 하루 최대 사용금액 10000 * n이다.
        그 중간값으로 탐색을 시작해서 몇 번의 인출이 필요한지 센다. 
        전날까지의 사용 금액에 오늘 사용해야하는 금액을 더해서 인출액보다 크면 횟수를 증가시키고 합을 오늘 사용 금액으로 갱신한다.
        인출액보다 작으면 합에 오늘 사용 금액을 단순히 더해준다.
        인출 횟수가 목표치보다 작으면 문제의 조건에 따라 의미없는 입출금을 할 수 있으므로 답이 될 수 있다. 
        이때의 인출액을 저장하고 최솟값을 찾아가기 위해 rt 값을 조정해 탐색을 계속한다.
        목표치보다 크면 lt값을 조정해 더 큰 범위의 값에서 적절한 인출액을 계속 탐색한다.
'''
def Count(amt):
    cnt = 1
    tot = 0
    for i in range(len(a)):
        if tot + a[i] > amt:
            cnt += 1
            tot = a[i]
        else:
            tot += a[i]
    return cnt
n, m = map(int, input().split())
a = []
for _ in range(n):
    a.append(int(input()))
lt = max(a)
rt = n * 10000
res = 0
while lt <= rt:
    mid = (lt + rt) // 2
    if Count(mid) <= m:
        res = mid
        rt = mid - 1
    else:
        lt = mid + 1
print(res)
