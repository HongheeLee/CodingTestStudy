'''
    문제설명
        백준 1931 회의실배정 (그리디 알고리즘 활용)
        각 회의의 시작 시간과 종료 시간이 주어질 때 회의가 겹치지 않도록 하면서 할 수 있는 최대의 회의 개수 찾기 
    해결전략
        각 단계에서 최적이라고 생각되는 결정을 하는 그리디 알고리즘 활용.
        그리디 알고리즘에서 핵심은 정렬이다. 
        여기서는 시작 시간이 아니라 종료 시간으로 정렬해야 원하는 결과 얻을 수 있음. 
        1. 회의 시작, 종료 시간을 리스트에 튜플 형식으로 넣는다.
        2. 람다 함수로 정렬의 기준을 종료 시간으로 설정해 리스트를 정렬한다.
        3. 전 회의 종료 시간보다 지금 회의 시작 시간이 뒤이면 회의를 진행한다(회의 개수 증가, 종료 시간 재할당)  
'''
n = int(input())
meeting = []
for i in range(n):
    s, e = map(int, input().split())
    meeting.append((s, e))
meeting.sort(key = lambda x : (x[1], x[0]) )
cnt = 0
et = 0
for s, e in meeting:
    if s >= et:
        et = e
        cnt += 1
print(cnt)
